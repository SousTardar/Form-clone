# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'registr.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QMessageBox
from sqlalchemy import Column, Integer, String
from sqlalchemy import create_engine
from sqlalchemy.engine.url import URL
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, session

DATABASE = {
    'drivername': 'postgres',  
    'host': 'localhost',
    'port': '5433',
    'username': 'postgres',
    'password': 'P@ssw0rd',
    'database': 'test'
}

engine = create_engine(URL(**DATABASE))

DeclarativeBase = declarative_base()


# class Post(DeclarativeBase):
#      'posts'
#
#     id = Column(Integer, primary_key=True)
#     name = Column('name', String)
#     url = Column('url', String)

class Users(DeclarativeBase):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    nick = Column(String(50), unique=True)
    psw = Column(String(500), nullable=True)
    name = Column(String(500), unique=True)
    group = Column(Integer)


def main():
    engine = create_engine(URL(**DATABASE))
    DeclarativeBase.metadata.create_all(engine)
    Session = sessionmaker(bind=engine)
    session = Session()


#app = Flask(__name__)
# app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://user:password@localhost/my_db'
#db = SQLAlchemy(app)

class Appl(QWidget):

    def __init__(self):
        self.left = 10
        self.top = 10
        self.width = 320
        self.height = 200
        self.initUI()


try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8


    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)


# conn = psycopg2.connect(host="localhost",database="college", user="postgres", password="P@ssw0rd")
# cursor = conn.cursor()

# def db():
#     with psycopg2.connect('college.db') as db:
#         c = db.cursor()
#     c.execute('create table if not exists users(name TEXT NOT NULL,group INT NOT NULL,username TEXT NOT NULL,password TEXT NOT NULL)')
#     db.commit()
#     c.close()
#     db.close()

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(480, 387)
        Dialog.setStyleSheet("background-color: black; color: white;")
        self.tabWidget = QtWidgets.QTabWidget(Dialog)
        self.tabWidget.setGeometry(QtCore.QRect(40, 20, 391, 331))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget.setFont(font)
        self.tabWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tabWidget.setStyleSheet("background-color: rgb(58, 58, 58);\n"
                                     "color: black;\n"
                                     "")
        self.tabWidget.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.widget = QtWidgets.QWidget(self.tab)
        self.widget.setGeometry(QtCore.QRect(100, 10, 201, 271))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lineEdit_username = QtWidgets.QLineEdit(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_username.setFont(font)
        self.lineEdit_username.setStyleSheet("background-color: white;")
        self.lineEdit_username.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit_username.setObjectName("lineEdit_username")
        self.verticalLayout.addWidget(self.lineEdit_username)
        self.lineEdit_fname = QtWidgets.QLineEdit(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_fname.setFont(font)
        self.lineEdit_fname.setStyleSheet("background-color: white;")
        self.lineEdit_fname.setObjectName("lineEdit_fname")
        self.verticalLayout.addWidget(self.lineEdit_fname)
        self.lineEdit_sname = QtWidgets.QLineEdit(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_sname.setFont(font)
        self.lineEdit_sname.setStyleSheet("background-color: white;")
        self.lineEdit_sname.setObjectName("lineEdit_sname")
        self.verticalLayout.addWidget(self.lineEdit_sname)
        self.lineEdit_group = QtWidgets.QLineEdit(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_group.setFont(font)
        self.lineEdit_group.setStyleSheet("background-color: white;")
        self.lineEdit_group.setObjectName("lineEdit_group")
        self.verticalLayout.addWidget(self.lineEdit_group)
        self.lineEdit_pass = QtWidgets.QLineEdit(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_pass.setFont(font)
        self.lineEdit_pass.setStyleSheet("background-color: white;")
        self.lineEdit_pass.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_pass.setObjectName("lineEdit_pass")
        self.verticalLayout.addWidget(self.lineEdit_pass)
        self.pushButton_creat = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_creat.setFont(font)
        self.pushButton_creat.setStyleSheet("QPushButton {\n"
                                            "    color: #f2b824;\n"
                                            "    background-color: #1d1c21;\n"
                                            "    border: none;\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:hover {\n"
                                            "    color: #f2c44e;\n"
                                            "    background-color: #8bb3a7;\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:pressed{\n"
                                            "    color: #eb7b13;\n"
                                            "}")
        self.pushButton_creat.setObjectName("pushButton_creat")
        self.verticalLayout.addWidget(self.pushButton_creat)
        self.pushButton_clear = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_clear.setFont(font)
        self.pushButton_clear.setStyleSheet("QPushButton {\n"
                                            "    color: #f2b824;\n"
                                            "    background-color: #1d1c21;\n"
                                            "    border: none;\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:hover {\n"
                                            "    color: #f2c44e;\n"
                                            "    background-color: #8bb3a7;\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:pressed{\n"
                                            "    color: #eb7b13;\n"
                                            "}")
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.verticalLayout.addWidget(self.pushButton_clear)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.widget1 = QtWidgets.QWidget(self.tab_2)
        self.widget1.setGeometry(QtCore.QRect(100, 50, 181, 181))
        self.widget1.setObjectName("widget1")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lineEdit_user = QtWidgets.QLineEdit(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_user.setFont(font)
        self.lineEdit_user.setStyleSheet("background-color: white;")
        self.lineEdit_user.setObjectName("lineEdit_user")
        self.verticalLayout_2.addWidget(self.lineEdit_user)
        self.lineEdit_password = QtWidgets.QLineEdit(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_password.setFont(font)
        self.lineEdit_password.setStyleSheet("background-color: white;")
        self.lineEdit_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_password.setObjectName("lineEdit_password")
        self.verticalLayout_2.addWidget(self.lineEdit_password)
        self.pushButton_login = QtWidgets.QPushButton(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_login.setFont(font)
        self.pushButton_login.setStyleSheet("QPushButton {\n"
                                            "    color: #f2b824;\n"
                                            "    background-color: #1d1c21;\n"
                                            "    border: none;\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:hover {\n"
                                            "    color: #f2c44e;\n"
                                            "    background-color: #8bb3a7;\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:pressed{\n"
                                            "    color: #eb7b13;\n"
                                            "}")
        self.pushButton_login.setObjectName("pushButton_login")
        self.verticalLayout_2.addWidget(self.pushButton_login)
        self.pushButton_cl = QtWidgets.QPushButton(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_cl.setFont(font)
        self.pushButton_cl.setStyleSheet("QPushButton {\n"
                                         "    color: #f2b824;\n"
                                         "    background-color: #1d1c21;\n"
                                         "    border: none;\n"
                                         "}\n"
                                         "\n"
                                         "QPushButton:hover {\n"
                                         "    color: #f2c44e;\n"
                                         "    background-color: #8bb3a7;\n"
                                         "}\n"
                                         "\n"
                                         "QPushButton:pressed{\n"
                                         "    color: #eb7b13;\n"
                                         "}")
        self.pushButton_cl.setObjectName("pushButton_cl")
        self.verticalLayout_2.addWidget(self.pushButton_cl)
        self.tabWidget.addTab(self.tab_2, "")

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.lineEdit_username.setPlaceholderText(_translate("Dialog", "Username"))
        self.lineEdit_fname.setPlaceholderText(_translate("Dialog", "First name"))
        self.lineEdit_sname.setPlaceholderText(_translate("Dialog", "Surname"))
        self.lineEdit_group.setPlaceholderText(_translate("Dialog", "Group"))
        self.lineEdit_pass.setPlaceholderText(_translate("Dialog", "Password"))
        self.pushButton_creat.setText(_translate("Dialog", "Create Account"))
        self.pushButton_clear.setText(_translate("Dialog", "Clear"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Dialog", "Create Account"))
        self.lineEdit_user.setPlaceholderText(_translate("Dialog", "Username"))
        self.lineEdit_password.setPlaceholderText(_translate("Dialog", "Password"))
        self.pushButton_login.setText(_translate("Dialog", "Login In"))
        self.pushButton_cl.setText(_translate("Dialog", "Clear"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Dialog", "Log In"))
        self.pushButton_clear.clicked.connect(self.clear1)
        self.pushButton_cl.clicked.connect(self.clear2)
        self.pushButton_creat.clicked.connect(self.save_new_student)
        self.pushButton_login.clicked.connect(self.login)

    def clear1(self):
        self.lineEdit_fname.setText('')
        self.lineEdit_sname.setText('')
        self.lineEdit_username.setText('')
        self.lineEdit_pass.setText('')
        self.lineEdit_group.setText('')

    def clear2(self):
        self.lineEdit_user.setText('')
        self.lineEdit_password.setText('')

    def save_new_student(self):
        try:

            name = str(self.lineEdit_fname.text() + '_' + self.lineEdit_sname.text())
            group = int(self.lineEdit_group.text())
            username = str(self.lineEdit_username.text())
            password = str(self.lineEdit_pass.text())

            new_post = Users(name=name, group=group, nick=username, psw=password)

            session.add(new_post)
            session.commit()

            # cursor.execute("INSERT INTO users(username, name, password, group) VALUES (%s, %s, %s, %s)", (username, name, password, group))
            # conn.commit()
            # QMessageBox.information(win,"Success!", 'Account created successfully.')
            self.clear1()

        except:
            QMessageBox.critical(win, "Error", 'Make sure no filed is empty.')

    def login(self):

        username = str(self.lineEdit_user.text())
        password = str(self.lineEdit_password.text())

        # cursor.execute("SELECT * FROM users WHERE username = %s and password = %s", (username, password))
        # data = cursor.fetchone()
        # conn.commit()
        # if Users(nick==usernames)
        #     info = '''
        #     Name = %s , Group = %s, Username = %s
        #
        #     You are Loged In.
        #     ''' % (data[0], str(data[1]), data[2])

        QMessageBox.information(win, "Loged In")
        sys.exit()
        # else:
        #     QMessageBox.critical(win, "Error", 'No account with that Username and Password')


if __name__ == "__main__":
    main()
    appl = QApplication(sys.argv)
    win = QWidget()
    ui = Ui_Dialog()
    ui.setupUi(win)
    win.show()
    sys.exit(appl.exec_())
